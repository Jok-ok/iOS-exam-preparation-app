import SwiftUI

struct ScheduleConstructorView: View {
    @Environment(\.dismiss) var dismiss
    @ObservedObject var viewModel: ExamScheduleViewModel
    @State var checkSuccess: Bool = false
    
    var body: some View {
        ScrollView {
            successBody
        }.alert("–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –Ω–µ —É–¥–∞–ª–æ—Å—å. üòø", isPresented: $checkSuccess, actions: {Button("–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã") {dismiss()}}, message: {noSuccessBody})
        .navigationDestination(for: PreparationDay.self) { preparationDay in
        }
        .onAppear {
            checkSuccess = !viewModel.checkPossibilityPreparation()
        }

        .navigationTitle("–ì—Ä–∞—Ñ–∏–∫")
    }
    private var successBody: some View {
        LazyVGrid(columns: [GridItem(.flexible()), GridItem(.flexible())]) {
            ForEach($viewModel.preparationDays) { preparationDay in
                    NavigationLink(destination: DetailPreparationDayView(preparationDay: preparationDay)) {
                        PreparationDayView(preparationDay: preparationDay)
                }
            }
        }.padding()
    }
    private var noSuccessBody: some View {
        Text("–ú–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å:\n1. –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n2. –£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –æ—Å—Ç–∞–≤–∏–≤ —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ\n3. –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π, –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º")
    }
}

struct ScheduleConstructorView_Previews: PreviewProvider {
    static var previews: some View {
        ExamInfosAddingView()
    }
}
